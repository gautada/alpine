#!/bin/ash
#
# [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) is the default
# initial process which and executes all the applications and services that run in a container.
#
# This is the default ENTRYPOINT located at `/usr/sbin/entrypoint` and should be 
# augmented when used in downstream containers by over writting the `/etc/container/entrypoint` 
# file (which by default is a symlink to `/mnt/volumes/container/entrypoint`
#

ENTRYPOINT_PARAMS="$@"

echo "---------- [ Container: Alpine($(osversion)-$(whoami)) ] ----------"
ENTRYPOINT_FUNCTION="/etc/container/entrypoint.fnc"
if [ ! -f $ENTRYPOINT_FUNCTION ] ; then
 echo "[ERROR] No entrypint function($ENTRYPOINT_FUNCTION)"
 return 1
fi



echo "---------- [ Back-up(duplicity) ] ----------"
/bin/rm -rvf /opt/backup/duplicity*



echo "---------- [ Scheduler(crond) ] ----------"
/usr/bin/pgrep /usr/sbin/crond > /dev/null
RTN=$?
if [ $RTN -eq 1 ] ; then
 /usr/bin/sudo /usr/sbin/crond -b -l 0 -L /var/log/scheduler.log
 RTN=$?
 if [ $RTN -ne 0 ] ; then
  echo "[ERROR] command failed"
  return 3
 fi
else
 echo "[ERROR] Test command failed"
 return 2
fi
/usr/bin/pgrep /usr/sbin/crond > /dev/null
RTN=$?
 if [ $RTN -ne 0 ] ; then
  echo "[ERROR] scheduler not started"
  return 4
 fi



RTN=0
if [ -f "/etc/container.d/container-entrypoint" ] ; then
 echo "---------- [ Container(file) ] ----------"
 /etc/container.d/container-entrypoint $ENTRYPOINT_PARAMS
 RTN=$?
else
 if [ -L "/etc/container.d/container-entrypoint" && -e "/etc/container.d/container-entrypoint" ]; then
  echo "---------- [ Container(symlink) ] ----------"
  /etc/container.d/container-entrypoint $ENTRYPOINT_PARAMS
  RTN=$? 
 fi
fi
if [ $RTN -ne 0 ] ; then
   echo "[ERROR] command failed"
  return 5
 fi



if [ ! -z "$ENTRYPOINT_PARAMS" ] ; then
 echo "---------- [ Execute($ENTRYPOINT_PARAMS) ] ----------"
 . /etc/profile
 exec $ENTRYPOINT_PARAMS
 RTN=$?
 return $RTN
else
  echo "----------[ Entrypoint(block) ----------"
  # Kill the background crond and restart with the forground service.  Crond is the default
  # container process.
  /usr/bin/pgrep /usr/sbin/crond > /dev/null
  RTN=$?
  if [ $? -eq 0 ] ; then
   /usr/bin/sudo /usr/bin/killall crond
  fi
  /usr/bin/sudo /usr/sbin/crond -f -l 0
fi
