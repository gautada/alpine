#!/bin/ash
#
# [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint)
# An ENTRYPOINT allows you to configure a container that will run as an executable.
#
# This is the default ENTRYPOINT and will be augmented and used by downstream
# containers.
#
# This is the default entrypoint script for this and all downstream containers.
# This script just calls all of the scripts (note: should be shell scripts) that
# are in `/etc/entrypoint.d`. These script initialize and run the container services
# and the container process.  Scripts loaded should:
# - return a != 0 if a forground process is called to stop subsequent scripts being called.
# - Services should check to make sure they are not already running.
#
# The last script(99-) executes whatever the container parameters provided from the command line.
# The default container process is crond.  If the entrypoint gets to the last script and there
# has not been priovided with executable parameters, then crond will be re-launched in the forground to
# keep the container up and running.
#
#
export ENTRYPOINT_PARAMS="$@"

for script in /etc/profile.d/*.sh ; do
    if [ -r "$script" ] ; then
        . "$script"
    fi
done
unset script

echo "---------- [ ENTRYPOINT: Alpine($(osversion)-$(whoami)) ] ----------"
run-parts --exit-on-error /etc/entrypoint.d
EXIT=$?
if [ $? -eq 0 ] ; then
 /exitpoint
else
 echo "Entrypoint errored($EXIT) could not close cleanly"
fi


