#!/bin/sh
#
# container-backup: Controller script for container wide back-up

 source /etc/container/backup-functions
 # source /mnt/volumes/container/workspace/alpine/backup-function
# . /etc/profile

SOURCE="/tmp/backup"
ARCHIVE="/var/backup"
NAME="duplicity"
CACHE="$ARCHIVE/$NAME"
TARGET="/mnt/volumes/backup"

run_backup() {
 # Confirm that backup function is available
 BACKUP_FUNCTION="container_backup"
 if [ "$(type -t $BACKUP_FUNCTION)" == "$BACKUP_FUNCTION" ] ; then
  create_backup_source $SOURCE
  echo "[ INFO]: Clean old backups"
  MANIFEST="$(parse_manifest_path $SOURCE $CACHE $TARGET)"
  echo "[ INFO]: Manifest - $MANIFEST"
  duplicity_clean $SOURCE $CACHE $TARGET
  
 
  # Determine if full or incremental
  if [ ! -f $MANIFEST ] ; then
   echo "[ INFO]: FULL backup(No Manifest)"
   duplicity_backup "full" $NAME $SOURCE $CACHE $TARGET
  else
   # RESET BACKUP CHAIN - At midnight
   if [ "00" == "$(date --utc +%H)" ] ; then
    echo "[ INFO]: FULL backup(Daily 00)"
    duplicity_backup "full" $NAME $SOURCE $CACHE $TARGET
   else
    TIMESTAMP_LAST=$(date --utc +%s -r $MANIFEST)
    echo "Last: $TIMESTAMP_LAST"
    TIMESTAMP_NOW=$(date --utc +%s)
    echo "Now: $TIMESTAMP_NOW"
    TIMESTAMP_DAY=86400
    TIMESTAMP_DELTA=$(($TIMESTAMP_NOW-$TIMESTAMP_LAST))
    echo "Delta: $TIMESTAMP_DELTA ($TIMESTAMP_DAY)"
    # RESET BACKUP CHAIN - If older than 24 hours
    if [ $TIMESTAMP_DAY -lt $TIMESTAMP_DELTA ] ; then
     echo "[ INFO]: FULL backup(Timestamp)"
     duplicity_backup "full" $NAME $SOURCE $CACHE $TARGET
    else # INCREMENTAL BACKUP
     echo "[ INFO]: INCREMENTAL backup"
     duplicity_backup "incr" $NAME $SOURCE $CACHE $TARGET
    fi
   fi
  fi
  clean_backup_source $SOURCE
 else
  echo "[WARN]: No backup function found"
 fi
 
}

run_backup

